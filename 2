#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <omp.h>
#include <sys/time.h>


#define N 1000

int A[N][N];
int B[N][N];
int C[N][N];

int main() 
{
    int i,j,k;
	double elapsed; 
    omp_set_num_threads(omp_get_num_procs());
	int m,n,p,q;

	printf("Enter the 1st matrix dimensions M x N ");
	scanf("%d%d",&m,&n);
	printf("Enter 1st matrix :\n");
    for (i= 0; i< m; i++)
        for (j= 0; j< n; j++)
	{
            scanf("%d",&A[i][j]);

	}
	printf("Enter the 2nd matrix dimensions P x Q ");
	scanf("%d%d",&p,&q);
	if(n!=p)
	{
		printf("Cant multiply as p!=n");
		return 0;
	}
	printf("Enter 2nd matrix :\n");
    for (i= 0; i< p; i++)
        for (j= 0; j< q; j++)
	{
            scanf("%d",&B[i][j]);

	}
	
	double starttime=omp_get_wtime();
    #pragma omp parallel for private(i,j,k) shared(A,B,C)
    for (i = 0; i < m; ++i) {
        for (j = 0; j < q; ++j) {
            for (k = 0; k < p; ++k) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }
	elapsed=omp_get_wtime()-starttime;
    printf("elapsed time = %f seconds.\n", elapsed);
#pragma omp parallel for schedule(dynamic,1)
    for (i= 0; i< m; i++)
    {
        for (j= 0; j< q; j++)
        {
            printf("%d\t",C[i][j]);
        }
        printf("\n");
    }
   
}
 
